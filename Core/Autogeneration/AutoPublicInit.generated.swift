// Generated using Sourcery 0.15.0 â€” https://github.com/krzysztofzablocki/Sourcery
// DO NOT EDIT


// autogenerated with SwiftGen
// DO NOT EDIT

// swiftlint:disable file_length
// swiftlint:disable line_length
// swiftlint:disable type_body_length
// swiftlint:disable function_parameter_count

public extension Coordinates {
    public static func new(lat: Double, lng: Double) -> Coordinates {
        return Coordinates(lat: lat, lng: lng)
    }
}

public extension Event {
    public static func new(name: String, city: String, flagURL: URL?, detailsURL: URL?, startDate: Date, finishDate: Date, logoURL: URL?, prizePool: Double, countOfTeams: Int, coordinates: Coordinates) -> Event {
        return Event(name: name, city: city, flagURL: flagURL, detailsURL: detailsURL, startDate: startDate, finishDate: finishDate, logoURL: logoURL, prizePool: prizePool, countOfTeams: countOfTeams, coordinates: coordinates)
    }
}

public extension ImageSize {
    public static func new(height: Double, weight: Double) -> ImageSize {
        return ImageSize(height: height, weight: weight)
    }
}

public extension NewsDescription {
    public static func new(title: String, date: Date, author: String, moreInfoURL: URL?, id: Int, content: [NewsContent]) -> NewsDescription {
        return NewsDescription(title: title, date: date, author: author, moreInfoURL: moreInfoURL, id: id, content: content)
    }
}

public extension NewsImageContent {
    public static func new(coverImageURL: URL?) -> NewsImageContent {
        return NewsImageContent(coverImageURL: coverImageURL)
    }
}

public extension NewsPreview {
    public static func new(title: String, coverImageURL: URL?, detailsURL: URL?, id: Int) -> NewsPreview {
        return NewsPreview(title: title, coverImageURL: coverImageURL, detailsURL: detailsURL, id: id)
    }
}

public extension NewsTextContent {
    public static func new(text: String) -> NewsTextContent {
        return NewsTextContent(text: text)
    }
}

public extension PlayerBanner {
    public static func new(coverImageURL: URL?, id: Int, updatedDate: Date) -> PlayerBanner {
        return PlayerBanner(coverImageURL: coverImageURL, id: id, updatedDate: updatedDate)
    }
}

public extension PlayerDescription {
    public static func new(id: Int, nickname: String, name: String, surname: String, avatarURL: URL?, country: String, teamName: String, teamLogoURL: URL?, flagURL: URL?, moreInfoURL: URL?, mouse: String, mousepad: String, monitor: String, keyboard: String, headSet: String, effectiveDPI: String, gameResolution: String, windowsSensitivity: String, pollingRate: String, configURL: URL?) -> PlayerDescription {
        return PlayerDescription(id: id, nickname: nickname, name: name, surname: surname, avatarURL: avatarURL, country: country, teamName: teamName, teamLogoURL: teamLogoURL, flagURL: flagURL, moreInfoURL: moreInfoURL, mouse: mouse, mousepad: mousepad, monitor: monitor, keyboard: keyboard, headSet: headSet, effectiveDPI: effectiveDPI, gameResolution: gameResolution, windowsSensitivity: windowsSensitivity, pollingRate: pollingRate, configURL: configURL)
    }
}

public extension PlayerPreview {
    public static func new(nickname: String, profileImageSize: ImageSize, avatarURL: URL?, id: Int) -> PlayerPreview {
        return PlayerPreview(nickname: nickname, profileImageSize: profileImageSize, avatarURL: avatarURL, id: id)
    }
}

public extension Team {
    public static func new(name: String, logoURL: URL?, id: Int, players: [PlayerPreview]) -> Team {
        return Team(name: name, logoURL: logoURL, id: id, players: players)
    }
}
